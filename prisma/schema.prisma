// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  //本番サーバー
  url = env("DATABASE_URL")
  //テーブル作成
  // url = env("SHADOW_DATABASE_URL")


  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")

  referentialIntegrity = "prisma"
}
generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}
// datasource db {
//   provider = "sqlite"
//   url      = "file:dev.db"
// }


model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model TypingResult {
  id        Int      @default(autoincrement()) @id
  userId  String?  @map("user_id")
  name    String?
  image   String?
  course  String
  result  Int
  resulet Int?
  email   String?
  times   Int?
  date    DateTime @default(now())

  @@map("typingresults")
}

model SampleBlog {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String
  @@map("sampleblog")
}

model SampleBlog2 {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String
  @@map("sampleblog2")
}

model SampleBlog3 {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String
  @@map("sampleblog3")
}

