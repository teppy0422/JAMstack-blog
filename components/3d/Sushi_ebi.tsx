/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    立方体002_1: THREE.Mesh;
    立方体002_2: THREE.Mesh;
    立方体002_3: THREE.Mesh;
    立方体002_4: THREE.Mesh;
    立方体002_5: THREE.Mesh;
    立方体002_6: THREE.Mesh;
    立方体911: THREE.SkinnedMesh;
    立方体911_1: THREE.SkinnedMesh;
    立方体911_2: THREE.SkinnedMesh;
    立方体911_3: THREE.SkinnedMesh;
    Bone: THREE.Bone;
  };
  materials: {
    Voxel_mat246: THREE.MeshStandardMaterial;
    Voxel_mat247: THREE.MeshStandardMaterial;
    Voxel_mat22: THREE.MeshStandardMaterial;
    Voxel_mat30: THREE.MeshStandardMaterial;
    Voxel_mat24: THREE.MeshStandardMaterial;
    Voxel_mat1: THREE.MeshStandardMaterial;
    Voxel_mat21: THREE.MeshStandardMaterial;
  };
};

type ActionName = "action_ebi" | "立方体.001Action" | "立方体.002Action";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export default function Model({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(
    "/sushi_ebi.glb"
  ) as GLTFResult;
  const { actions } = useAnimations<GLTFActions>(animations, group);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="立方体001" position={[-0.08, 0.82, 0.05]} scale={0.1}>
          <mesh
            name="立方体002_1"
            castShadow
            receiveShadow
            geometry={nodes.立方体002_1.geometry}
            material={materials.Voxel_mat246}
          />
          <mesh
            name="立方体002_2"
            castShadow
            receiveShadow
            geometry={nodes.立方体002_2.geometry}
            material={materials.Voxel_mat247}
          />
          <mesh
            name="立方体002_3"
            castShadow
            receiveShadow
            geometry={nodes.立方体002_3.geometry}
            material={materials.Voxel_mat30}
          />
          <mesh
            name="立方体002_4"
            castShadow
            receiveShadow
            geometry={nodes.立方体002_4.geometry}
            material={materials.Voxel_mat24}
          />
          <mesh
            name="立方体002_5"
            castShadow
            receiveShadow
            geometry={nodes.立方体002_5.geometry}
            material={materials.Voxel_mat1}
          />
          <mesh
            name="立方体002_6"
            castShadow
            receiveShadow
            geometry={nodes.立方体002_6.geometry}
            material={materials.Voxel_mat22}
          />
          <group
            name="アーマチュア"
            position={[7.37, 3.74, 0]}
            rotation={[0, 0, -Math.PI / 2]}
            scale={9.55}
          >
            <primitive object={nodes.Bone} />
          </group>
          <group name="立方体002">
            <skinnedMesh
              name="立方体911"
              geometry={nodes.立方体911.geometry}
              material={materials.Voxel_mat30}
              skeleton={nodes.立方体911.skeleton}
            />
            <skinnedMesh
              name="立方体911_1"
              geometry={nodes.立方体911_1.geometry}
              material={materials.Voxel_mat24}
              skeleton={nodes.立方体911_1.skeleton}
            />
            <skinnedMesh
              name="立方体911_2"
              geometry={nodes.立方体911_2.geometry}
              material={materials.Voxel_mat1}
              skeleton={nodes.立方体911_2.skeleton}
            />
            <skinnedMesh
              name="立方体911_3"
              geometry={nodes.立方体911_3.geometry}
              material={materials.Voxel_mat21}
              skeleton={nodes.立方体911_3.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/sushi_ebi.glb");
